# server {
#     listen 80;
#     server_name srv621803.hstgr.cloud;

#     # Serve React frontend
#     root /usr/share/nginx/html;
#     index index.html index.htm;

#     # Handle React Router
#     location / {
#         try_files $uri /index.html;
#     }

#     # Proxy API requests to Express backend
#     location /api/ {
#         proxy_pass http://localhost:5000/api/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }

server {
    listen 80;
    server_name www.mytbcompanion.com mytbcompanion.com;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name www.mytbcompanion.com mytbcompanion.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/www.mytbcompanion.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.mytbcompanion.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # modern configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (uncomment if you're sure)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    # Serve React frontend
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Handle React Router
    location / {
        try_files $uri /index.html;
    }

    # Proxy API requests to Express backend
    location /api/ {
        proxy_pass https://localhost:3001/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
